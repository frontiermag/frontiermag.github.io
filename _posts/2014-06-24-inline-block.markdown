---
layout: post
title: "Инлайн-блоки как светлое настоящее"
tag: "вёрстка"
short: "Будет полезно тем, у кого мало опыта с инлайн-блоками; всем прочим — только ностальгия."
published: true
---
Пока flexbox ещё за Горами Реализаций, inline-block — надёжный инструмент верстальщика.

<abbr title="Too long; did not read — (англ.) многабукфниасилил">TL;DR</abbr>: элемент со свойством `display: inline-block` рендерится как блок, но при этом позиционируется в строке.

Помимо квадратуры круга и простого доказательства Великой теоремы Ферма, перед человечеством с момента создания интернета стоял важный вопрос — как отцентрировать блок по вертикали, если высота этого блока заранее неизвестна (ведь 
если известна, то <abbr title="top: 50%; margin-top: -(height/2)px">всё просто</abbr>)

Каждый решал этот вопрос в меру своей испорченности — кто возвращал макет дизайнерам с пометкой «no way», кто забивал на семантику и верстал таблицами, а кто делал получше, применяя `display: table` к `<div>`. [Хитрая техника](http://www.smashingmagazine.com/2013/08/09/absolute-horizontal-vertical-centering-css/) c абсолютным позиционированием не была ещё сильно известна.

И тут inline-block оказался как раз. Он нормально поддерживается всеми браузерами (IE — с восьмой версии), довольно семантичен и прост. Вертикальное центрирование — лишь одно из многих применений.

Вся соль в том, что он рендерится в потоке строки, но при этом доступны все свойства обычных блоков. Если вы пробовали применить к строчным элементам margin или padding, то вы уже осознаёте возможности инлайн-блоков. Можно, например, сделать <span style="display: inline-block; padding: .3rem 1rem; border: 1px dashed black; border-radius: .3rem; background: gold; vertical-align: 0">так</span> — и никакой браузер не заругается.

С использованием инлайн-блоков так же элементарно сверстать типичную подачу товаров в интернет-магазине, с которой раньше было много проблем: нужно чётко подсчитывать ширину, выводить бэкендом в специальных контейнерах специальное количество блоков, иначе вся вёрстка разъезжается к чёрту. Инлайн-блоки делают всё гораздо проще — можно в один контейнер накидать кучу блоков и они будут сами распределяться, если не влезло на одну строку — перенесутся. 

К сути:

<style>
    .sample {
        list-style: none;
    } 
    .sample-item {
        display: inline-block;
        border: 1px solid black;
        margin: 1rem;
        max-width: 11.2rem;
    }
    .sample-item img {
        display: block;
        width: 100%;
    }
    .sample-item span {
        display: inline-block;
        margin: .5rem;
    }
</style>
<ul class="sample"><!--
 --><li class="sample-item">
        <img src="http://placekitten.com/160/100">
        <span>Котейка номер раз. Очень вежливый, приучен к лотку. Любит Звёздные Войны и верстать на досуге.</span></li><!--
 --><li class="sample-item">
        <img src="http://placekitten.com/160/100">
        <span>Котейка номер два. Не такой вежливый, зато милый: расцарапает, а не жалко!</span></li><!--
 --><li class="sample-item">
        <img src="http://placekitten.com/160/100">
        <span>Котейка номер три. Если можно так сказать, чёрная лошадка среди этих котеек. Я бы даже сказал, кот в мешке!</span></li><!--
--></ul>


С использованием инлайн-блока для подобных целей следует помнить, что он рендерится в строке. А значит, что все пробелы между элементами, которые нужны для форматирования кода <abbr title="Это стандартное поведение интерпретатора HTML, которое, впрочем, можно изменить. Нет, не только тегом <pre>">схлопываются в один</abbr>, который честно занимает своё место в строке. Эта особенность, если про неё забыть, может стоить вам получаса отладки, когда блок из-за неведомой (но только что объяснённой) магии сдвигается на два-три пикселя и уезжают вниз, например.

Столкнувшись с этой особенностью (*не баг, а фича!*), веб-технологи тут же придумали несколько вариантов решения:
<style>
ul ul {
    margin-left: 1rem;
    margin-bottom: 0.5rem;
    list-style-type: square;
}
</style>

* Не закрывать теги. Теги `<li>`, `<p>` можно не закрывать — браузер сам закроет их, когда встречает следующий `<li>` или `<p>`.
    - Плюсы: легко использовать
    - Минусы: редактор так и норовит закрыть `</li>`; не применить к другим тегам
* Не вставлять пробелов между тегами.
    - Плюсы: foolproof. Ну, почти. Применимо к любым тегам
    - Минусы: код не так красиво отформатирован в редакторе! (не имеет значения, если разметка генерируется сервером)
* Вставлять HTML-комментарии. `</div><!--куча отступов--><div>`
    - Плюсы: Применимо ко всем тегам. Мой личный фаворит.
    - Минусы: некоторым не нравятся «лишние» комментарии в коде.


Вот, собственно, и всё, что нужно знать об инлайн-блоках, чтобы начать ими восхищаться и пользоваться.